class Stack{constructor(){this.list=[]}push(...t){t.forEach(t=>{this.list.push(t)})}pop(){return this.list.pop()}peek(){return this.list[this.size()-1]}size(){return this.list.length}isEmpty(){return 0===this.size()}clear(){this.list=[]}toString(){return this.list.toString()}}class Queue{constructor(){this.count=0,this.index=0,this.list={}}enqueue(...t){t.forEach(t=>{this.list[this.count]=t,this.count+=1})}dequeue(){var t;if(!this.isEmpty())return t=this.list[this.index],delete this.list[this.index],this.index+=1,t}peek(){if(!this.isEmpty())return this.list[this.index]}size(){return this.count-this.index}isEmpty(){return 0===this.size()}clear(){this.list={},this.count=0,this.index=0}toString(){if(this.isEmpty())return"";let e=""+this.list[this.index];for(let t=this.index+1;t<this.count;t++)e=e+","+this.list[t];return e}}class Deque{constructor(){this.count=0,this.index=0,this.list={}}addFront(t){if(this.isEmpty())this.addBack(t);else if(0<this.index)--this.index,this.list[this.index]=t;else{for(let t=this.count;0<t;t--)this.list[t]=this.list[t-1];this.count+=1,this.list[0]=t}}addBack(t){this.list[this.count]=t,this.count+=1}removeFront(){var t;if(!this.isEmpty())return t=this.list[this.index],delete this.list[this.index],this.index+=1,t}removeBack(){var t;if(!this.isEmpty())return--this.count,t=this.list[this.count],delete this.list[this.count],t}peekFront(){if(!this.isEmpty())return this.list[this.index]}peekBack(){if(!this.isEmpty())return this.list[this.count-1]}size(){return this.count-this.index}isEmpty(){return 0===this.size()}clear(){this.list={},this.count=0,this.index=0}toString(){if(this.isEmpty())return"";let e=""+this.list[this.index];for(let t=this.index+1;t<this.count;t++)e=e+","+this.list[t];return e}}class Node{constructor(t,e){this.element=t,this.next=e}}class DoublyNode extends Node{constructor(t,e,i){super(t,e),this.prev=i}}class ValuePair{constructor(t,e){this.key=t,this.value=e}toString(){return`#${this.key}: `+this.value}}const defaultEquals=(t,e)=>t===e,defaultToString=t=>null===t?"NULL":void 0===t?"UNDEFINED":"string"==typeof t||t instanceof String?""+t:t.toString();class LinkedList{constructor(t=defaultEquals){this.equalsFn=defaultEquals,this.count=0,this.equalsFn=t}push(e){e=new Node(e);if(this.count+=1,this.head){let t=this.head;for(;t.next;)t=t.next;t.next=e}else this.head=e}insert(t,e){var i;return!(e<0||e>this.count||(i=new Node(t),e!==this.count&&(this.count+=1),e===this.count?this.push(t):0===e?(i.next=this.head,this.head=i):(t=this.getElementAt(e-1),i.next=t.next,t.next=i),0))}remove(t){t=this.indexOf(t);return this.removeAt(t)}removeAt(e){if(!(e<0||e>=this.count)){let t=this.head;return 0===e?this.head=null===t||void 0===t?void 0:t.next:(e=this.getElementAt(e-1),t=e.next,e.next=t.next),--this.count,null===t||void 0===t?void 0:t.element}}indexOf(t){let e=this.head,i=0;for(;e;){if(this.equalsFn(e.element,t))return i;i++,e=e.next}return-1}getHead(){return this.head}getElementAt(i){if(!(i<0||i>=this.count)){let t=this.head,e=0;for(;e<i;)e+=1,t=t.next;return t}}size(){return this.count}isEmpty(){return 0===this.count}clear(){this.head=void 0,this.count=0}toString(){if(!this.head)return"";let t=this.head,e=""+this.head.element;for(;t.next;)e+=","+t.next.element,t=t.next;return e}}class DoublyLinkedList extends LinkedList{constructor(t=defaultEquals){super(t)}push(t){t=new DoublyNode(t);this.count+=1,this.head&&this.tail?(this.tail.next=t).prev=this.tail:this.head=t,this.tail=t}insert(t,e){var i;return!(e<0||e>this.count||(i=new DoublyNode(t),e!==this.count&&(this.count+=1),e===this.count?this.push(t):0===e?this.head?((this.head.prev=i).next=this.head,this.head=i):(this.head=i,this.tail=i):(e=(t=this.getElementAt(e-1)).next,i.next=e,(t.next=i).prev=t,e.prev=i),0))}removeAt(e){if(!(e<0||e>=this.count)){let t=this.head;return 0===e?(this.head=t.next,this.head?this.head.prev=void 0:this.tail=void 0):(e=this.getElementAt(e-1),(t=e.next).next&&(t.next.prev=e),e.next=t.next),--this.count,t.element}}getTail(){return this.tail}clear(){super.clear(),this.tail=void 0}}class Dictionary{constructor(t=defaultToString){this.table={},this.toStringFn=defaultToString,this.toStringFn=t}set(t,e){this.table[this.toStringFn(t)]=new ValuePair(t,e)}get(t){return null==(t=this.table[this.toStringFn(t)])?void 0:t.value}hasKey(t){return!!this.table[this.toStringFn(t)]}remove(t){return!!this.hasKey(t)&&(delete this.table[this.toStringFn(t)],!0)}clear(){this.table={}}size(){return Object.keys(this.table).length}isEmpty(){return 0===this.size()}keys(){return this.keyValues().map(({key:t})=>t)}values(){return this.keyValues().map(({value:t})=>t)}keyValues(){return Object.values(this.table)}forEach(t){for(var{key:e,value:i}of this.keyValues())if(!1===t(e,i))break}toString(){return this.isEmpty()?"":this.keyValues().reduce((t,e)=>t?t+","+e.toString():e.toString(),"")}}class HashTable{constructor(t=defaultToString,e=1e3){this.table={},this.max=1e3,this.toStringFn=defaultToString,this.toStringFn=t,this.max=e}loseloseHashCode(t){if("number"==typeof t)return t;const s=this.toStringFn(t);return s.split("").reduce((t,e,i)=>t+s.charCodeAt(i),0)%this.max}hashCode(t){return this.loseloseHashCode(t)}put(t,e){var i=this.hashCode(t);return this.table[i]=new ValuePair(t,e),!0}get(t){var t=this.hashCode(t);return null==(t=this.table[t])?void 0:t.value}remove(t){t=this.hashCode(t);return!!this.table[t]&&(delete this.table[t],!0)}getTable(){return this.table}clear(){this.table={}}size(){return Object.keys(this.table).length}isEmpty(){return 0===this.size()}toString(){return this.isEmpty()?"":Object.values(this.table).reduce((t,e)=>t?t+","+e.toString():e.toString(),"")}}export{Deque,Dictionary,DoublyLinkedList,HashTable,LinkedList,Queue,Stack};
